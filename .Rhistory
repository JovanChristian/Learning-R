xlab = 'Departement',
ylab = 'Product Price',
col = rainbow(3),
las = 2
)
boxplot(products$product_price~products$department, data = products,
main = 'Product Price for All Departement',
xlab = 'Departement',
ylab = 'Product Price',
col = rainbow(4),
las = 2
)
boxplot(products$product_price~products$department, data = products,
main = 'Product Price for All Departement',
xlab = 'Departement',
ylab = 'Product Price',
col = rainbow(5),
las = 2
)
boxplot(products$product_price~products$department, data = products,
main = 'Product Price for All Departement',
xlab = 'Departement',
ylab = 'Product Price',
col = rainbow(6),
las = 2
)
boxplot(products$product_price~products$department, data = products,
main = 'Product Price for All Departement',
xlab = 'Departement',
ylab = 'Product Price',
col = rainbow(7),
las = 2
)
boxplot(products$product_price~products$department, data = products,
main = 'Product Price for All Departement',
xlab = 'Departement',
ylab = 'Product Price',
col = rainbow(8),
las = 2
)
boxplot(products$product_price~products$department, data = products,
main = 'Product Price for All Departement',
xlab = 'Departement',
ylab = 'Product Price',
col = rainbow(9),
las = 2
)
boxplot(products$product_price~products$department, data = products,
main = 'Product Price for All Departement',
xlab = 'Departement',
ylab = 'Product Price',
col = rainbow(10),
las = 2
)
boxplot(products$product_price~products$department, data = products,
main = 'Product Price for All Departement',
xlab = 'Departement',
ylab = 'Product Price',
col = rainbow(11),
las = 2
)
boxplot(products$product_price~products$department, data = products,
main = 'Product Price for All Departement',
xlab = 'Departement',
ylab = 'Product Price',
col = rainbow(12),
las = 2
)
boxplot(products$product_price~products$department, data = products,
main = 'Product Price for All Departement',
xlab = 'Departement',
ylab = 'Product Price',
col = rainbow(13),
las = 2
)
boxplot(products$product_price~products$department, data = products,
main = 'Product Price for All Departement',
xlab = 'Departement',
ylab = 'Product Price',
col = rainbow(14),
las = 2
)
boxplot(products$product_price~products$department, data = products,
main = 'Product Price for All Departement',
xlab = 'Departement',
ylab = 'Product Price',
col = rainbow(15),
las = 2
)
boxplot(products$product_price~products$department, data = products,
main = 'Product Price for All Departement',
xlab = 'Departement',
ylab = 'Product Price',
col = rainbow(16),
las = 2
)
boxplot(products$product_price~products$department, data = products,
main = 'Product Price for All Departement',
xlab = 'Departement',
ylab = 'Product Price',
col = rainbow(17),
las = 2
)
boxplot(products$product_price~products$department, data = products,
main = 'Product Price for All Departement',
xlab = 'Departement',
ylab = 'Product Price',
col = rainbow(18),
las = 2
)
boxplot(products$product_price~products$department, data = products,
main = 'Product Price for All Departement',
xlab = 'Departement',
ylab = 'Product Price',
col = rainbow(19),
las = 2
)
boxplot(products$product_price~products$department, data = products,
main = 'Product Price for All Departement',
xlab = 'Departement',
ylab = 'Product Price',
col = rainbow(20),
las = 2
)
boxplot(products$product_price~products$department, data = products,
main = 'Product Price for All Departement',
xlab = 'Departement',
ylab = 'Product Price',
col = rainbow(21),
las = 2
)
boxplot(products$product_price~products$department, data = products,
main = 'Product Price for All Departement',
xlab = 'Departement',
ylab = 'Product Price',
col = rainbow(100),
las = 2
)
boxplot(products$product_price~products$department, data = products,
main = 'Product Price for All Departement',
xlab = 'Departement',
ylab = 'Product Price',
col = rainbow(30),
las = 2
)
boxplot(products$product_price~products$department, data = products,
main = 'Product Price for All Departement',
xlab = 'Departement',
ylab = 'Product Price',
col = rainbow(1000),
las = 2
)
boxplot(products$product_price~products$department, data = products,
main = 'Product Price for All Departement',
xlab = 'Departement',
ylab = 'Product Price',
col = rainbow(500),
las = 2
)
boxplot(products$product_price~products$department, data = products,
main = 'Product Price for All Departement',
xlab = 'Departement',
ylab = 'Product Price',
col = rainbow(250),
las = 2
)
boxplot(products$product_price~products$department, data = products,
main = 'Product Price for All Departement',
xlab = 'Departement',
ylab = 'Product Price',
col = rainbow(125),
las = 2
)
boxplot(products$product_price~products$department, data = products,
main = 'Product Price for All Departement',
xlab = 'Departement',
ylab = 'Product Price',
col = rainbow(63),
las = 2
)
boxplot(products$product_price~products$department, data = products,
main = 'Product Price for All Departement',
xlab = 'Departement',
ylab = 'Product Price',
col = rainbow(32),
las = 2
)
boxplot(products$product_price~products$department, data = products,
main = 'Product Price for All Departement',
xlab = 'Departement',
ylab = 'Product Price',
col = rainbow(21),
las = 2
)
dept_count <- table(products$department),
dept_count <- table(products$department)
dept_count <- sort(products$department, decreasing = FALSE)
top5 <- head(dept_count, 5)
products <- read.csv('products.csv', na.strings = c('', 'N/A'), stringsAsFactors = F)
orders <- read.csv('orders.csv', fileEncoding = 'UTF-8-BOM', na.strings = c('', 'N/A'), stringsAsFactors = F)
boxplot(products$product_price~products$department, data = products,
main = 'Product Price for All Departement',
xlab = 'Departement',
boxplot(products$product_price~products$department, data = products,
main = 'Product Price for All Departement',
xlab = 'Departement',
ylab = 'Product Price',
col = rainbow(21),
las = 2
)
dept_count <- table(products$department)
dept_count <- sort(products$department, decreasing = FALSE)
top5 <- head(dept_count, 5)
dept_count <- table(products$department)
dept_count <- sort(products$department, decreasing = FALSE)
top5 <- head(dept_count, 5)
others <- sum(dept_count) - sum(top5)
dept_count <- table(products$department)
dept_count <- sort(products$department, decreasing = FALSE)
top5 <- head(dept_count, 5)
others <- sum(dept_count) - sum(top5)
departmentCount <- table(products$department)
departmentCount <- sort(departmentCount, decreasing = TRUE)
top5 <- head(departmentCount, 5)
others <- sum(departmentCount) - sum(top5)
lab <- c(names(top5), "others")
value <- c(as.numeric(top5), others)
percentage <- round(value/sum(value)*100, 2)
percentageLabel <- paste(lab, "(", percentage, "%)", sep = "")
pie(value, labels = percentageLabel, col = rainbow(6), main = "Top 5 Department(Based on Product Count)")
frozen <- subset(products, department=="frozen")
aisleCount <- table(frozen$aisle)
aisleCount <- sort(aisleCount, decreasing = FALSE)
lowest3 <- head(aisleCount, 3)
barplot(lowest3, main = "Lowest 3 Aisle in frozen Department(Based on Product Count)", col = rainbow(3))
boxplot(products$product_price~products$department, data = products,
main = 'Product Price for All Departement',
xlab = 'Departement',
ylab = 'Product Price',
col = rainbow(21),
las = 3
)
boxplot(products$product_price~products$department, data = products,
main = 'Product Price for All Departement',
xlab = 'Departement',
ylab = 'Product Price',
col = rainbow(21),
las = 4
)
boxplot(products$product_price~products$department, data = products,
main = 'Product Price for All Departement',
xlab = 'Departement',
ylab = 'Product Price',
col = rainbow(21),
las = 2
)
products <- read.csv('products.csv', fileEncoding = 'UTF-8-BOM', na.strings = c('', 'N/A'), stringsAsFactors = F)
products <- read.csv('products.csv', fileEncoding = 'UTF-8-BOM', na.strings = c('', 'N/A'), stringsAsFactors = F)
products <- read.csv('products.csv', na.strings = c('', 'N/A'), stringsAsFactors = F)
orders <- read.csv('orders.csv', fileEncoding = 'UTF-8-BOM', na.strings = c('', 'N/A'), stringsAsFactors = F)
products <- na.omit(products)
products <- na.omit(products)
orders <- na.omit(orders)
products <- read.csv('products.csv', na.strings = c('', 'N/A'), stringsAsFactors = F)
orders <- read.csv('orders.csv', fileEncoding = 'UTF-8-BOM', na.strings = c('', 'N/A'), stringsAsFactors = F)
products <- na.omit(products)
orders <- na.omit(orders)
products <- products[products$department == 'alcohol']
products <- products[products$department == 'alcohol']
products <- products[products$department == 'alcohol',]
View(products)
products <- products[products$aisle != 'specialty wines champagnes']
products <- products[products$aisle != 'specialty wines champagnes',]
alcohol <- products[products$department == 'alcohol',]
products <- read.csv('products.csv', na.strings = c('', 'N/A'), stringsAsFactors = F)
products <- na.omit(products)
alcohol <- products[products$department == 'alcohol',]
alcohol <- alcohol[alcohol$aisle != 'specialty wines champagnes',]
alcohol <- unique(alcohol)
View(orders)
Transacrion <- merge(alcohol, orders, by = 'product_id')
Transaction <- merge(alcohol, orders, by = 'product_id')
Transaction <- merge(alcohol, orders, by = 'product_id')
products <- read.csv('products.csv', na.strings = c('', 'N/A'), stringsAsFactors = F)
orders <- read.csv('orders.csv', fileEncoding = 'UTF-8-BOM', na.strings = c('', 'N/A'), stringsAsFactors = F)
products <- na.omit(products)
orders <- na.omit(orders)
alcohol <- products[products$department == 'alcohol',]
alcohol <- alcohol[alcohol$aisle != 'specialty wines champagnes',]
alcohol <- unique(alcohol)
Transaction <- merge(alcohol, orders, by = 'product_id')
Transaction <- split(Transaction$product_name, Transaction$order_id)
install.packages('arules')
library('arules')
TransactionData <- as(Transaction, 'transactions')
TransactionData <- as(Transaction, 'transactions')
TransactionData <- apriori(TransactionData, parameter = list(support = 0.04, target = 'Freq'))
TransactionData <- apriori(TransactionData, parameter = list(support = 0.04, target = 'Freq'))
inspect(TransactionData)
products <- read.csv('products.csv', na.strings = c('', 'N/A'), stringsAsFactors = F)
orders <- read.csv('orders.csv', fileEncoding = 'UTF-8-BOM', na.strings = c('', 'N/A'), stringsAsFactors = F)
products <- na.omit(products)
orders <- na.omit(orders)
alcohol <- products[products$department == 'alcohol',]
alcohol <- alcohol[alcohol$aisle != 'specialty wines champagnes',]
alcohol <- unique(alcohol)
Transaction <- merge(alcohol, orders, by = 'product_id')
Transaction <- split(Transaction$product_name, Transaction$order_id)
install.packages('arules')
library('arules')
TransactionData <- as(Transaction, 'transactions')
TransactionData <- apriori(TransactionData, parameter = list(support = 0.04, target = 'Freq'))
products <- read.csv('products.csv', na.strings = c('', 'N/A'), stringsAsFactors = F)
orders <- read.csv('orders.csv', fileEncoding = 'UTF-8-BOM', na.strings = c('', 'N/A'), stringsAsFactors = F)
# Hilangin N/A Data
products <- na.omit(products)
orders <- na.omit(orders)
# Preprocessing
alcohol <- products[products$department == 'alcohol',]
alcohol <- alcohol[alcohol$aisle != 'specialty wines champagnes',]
alcohol <- unique(alcohol)
# Prepare Data
Transaction <- merge(alcohol, orders, by = 'product_id')
Transaction <- split(Transaction$product_name, Transaction$order_id)
install.packages('arules')
library('arules')
# as
TransactionData <- as(Transaction, 'transactions')
TransactionData <- apriori(TransactionData, parameter = list(support = 0.04, target = 'Freq'))
inspect(TransactionData)
library('arules')
TransactionData <- as(Transaction, 'transactions')
TransactionData <- apriori(TransactionData, parameter = list(support = 0.04, target = 'Freq'))
inspect(TransactionData)
inspect(TransactionData, confidence = 0.5)
inspect(TransactionData, confidence = 0.5)
TransactionData <- apriori(TransactionData, parameter = list(support = 0.04, target = 'Freq'))
inspect(TransactionData)
inspect(TransactionData, confidence = 0.5)
inspect(ruleInduction(TransactionData, confidence = 0.5))
# Read File
products <- read.csv('products.csv', na.strings = c('', 'N/A'), stringsAsFactors = F)
orders <- read.csv('orders.csv', fileEncoding = 'UTF-8-BOM', na.strings = c('', 'N/A'), stringsAsFactors = F)
# Hilangin N/A Data
products <- na.omit(products)
orders <- na.omit(orders)
# a. Show the Product Price for all Product Department.
boxplot(products$product_price~products$department, data = products,
main = 'Product Price for All Departement',
xlab = 'Product Price',
ylab = 'Departement',
col = rainbow(length(unique(prod)))
)
boxplot(products$product_price~products$department, data = products,
main = 'Product Price for All Departement',
xlab = 'Product Price',
ylab = 'Departement',
col = rainbow(length(unique(products$department)))
las = 2
)
boxplot(products$product_price~products$department, data = products,
main = 'Product Price for All Departement',
xlab = 'Product Price',
ylab = 'Departement',
col = rainbow(length(unique(products$department))),
las = 2
)
departement_count <- table(products$department)
departement_count <- sort(products$department, decreasing = TRUE)
departement_count <- sort(products$department, decreasing = TRUE)
departement_count
departement_count
departement_count
top5 <- head(departement_count, 5)
top5
others <- sum(departement_count) - sum(top5)
products <- read.csv('products.csv', na.strings = c('', 'N/A'), stringsAsFactors = F)
orders <- read.csv('orders.csv', fileEncoding = 'UTF-8-BOM', na.strings = c('', 'N/A'), stringsAsFactors = F)
products <- na.omit(products)
orders <- na.omit(orders)
boxplot(products$product_price~products$department, data = products,
main = 'Product Price for All Departement',
xlab = 'Product Price',
ylab = 'Departement',
col = rainbow(length(unique(products$department))),
las = 2
)
departement_count <- table(products$department)
departement_count <- sort(products$department, decreasing = TRUE)
top5 <- head(departement_count, 5)
others <- sum(departement_count) - sum(top5)
department_count <- table(products$department)
department_count <- sort(products$department, decreasing = TRUE)
top5 <- head(department_count, 5)
others <- sum(department_count) - sum(top5)
lab <- c(names(top5), 'others')
values <- c(as.numeric(lab), 'others')
values <- c(as.numeric(top5), others)
percentage <- round(values/sum(values)*100, 2)
department_count
departmentCount <- table(products$department)
products <- read.csv('products.csv', na.strings = c('', 'N/A'), stringsAsFactors = F)
orders <- read.csv('orders.csv', fileEncoding = 'UTF-8-BOM', na.strings = c('', 'N/A'), stringsAsFactors = F)
# Hilangin N/A Data
products <- na.omit(products)
orders <- na.omit(orders)
# a. Show the Product Price for all Product Department.
boxplot(products$product_price~products$department, data = products,
main = 'Product Price for All Departement',
xlab = 'Product Price',
ylab = 'Departement',
col = rainbow(length(unique(products$department))),
las = 2
)
departmentCount <- table(products$department)
departmentCount
products <- read.csv('products.csv', na.strings = c('', 'N/A'), stringsAsFactors = F)
orders <- read.csv('orders.csv', fileEncoding = 'UTF-8-BOM', na.strings = c('', 'N/A'), stringsAsFactors = F)
# Hilangin N/A Data
products <- na.omit(products)
orders <- na.omit(orders)
boxplot(products$product_price~products$department, data = products,
main = 'Product Price for All Departement',
xlab = 'Product Price',
ylab = 'Departement',
col = rainbow(length(unique(products$department))),
las = 2
)
departemen_count <- table(products$department)
departemen_count
departement_count <- table(products$department)
# Read File
products <- read.csv('products.csv', na.strings = c('', 'N/A'), stringsAsFactors = F)
orders <- read.csv('orders.csv', fileEncoding = 'UTF-8-BOM', na.strings = c('', 'N/A'), stringsAsFactors = F)
# Hilangin N/A Data
products <- na.omit(products)
orders <- na.omit(orders)
# a. Show the Product Price for all Product Department.
boxplot(products$product_price~products$department, data = products,
main = 'Product Price for All Departement',
xlab = 'Product Price',
ylab = 'Departement',
col = rainbow(length(unique(products$department))),
las = 2
)
# b.	Show top 5 department based on its product count. Product which is not in the top 5
# department will go into “other” categories. For each area, put label to show percentage of
# the department mentioned along with department name.
departement_count <- table(products$department)
departement_count <- sort(products$department, decreasing = TRUE)
departement_count
departement_count <- sort(products$department, decreasing = TRUE)
departement_count
# Read File
products <- read.csv('products.csv', na.strings = c('', 'N/A'), stringsAsFactors = F)
orders <- read.csv('orders.csv', fileEncoding = 'UTF-8-BOM', na.strings = c('', 'N/A'), stringsAsFactors = F)
# Hilangin N/A Data
products <- na.omit(products)
orders <- na.omit(orders)
# a. Show the Product Price for all Product Department.
boxplot(products$product_price~products$department, data = products,
main = 'Product Price for All Departement',
xlab = 'Product Price',
ylab = 'Departement',
col = rainbow(length(unique(products$department))),
las = 2
)
# b.	Show top 5 department based on its product count. Product which is not in the top 5
# department will go into “other” categories. For each area, put label to show percentage of
# the department mentioned along with department name.
departement_count <- table(products$department)
departement_count <- sort(products$department, decreasing = TRUE)
departement_count
departement_count
departement_count <- table(products$department)
departement_count
departement_count <- sort(departement_count, decreasing = TRUE)
departement_count <- sort(departement_count, decreasing = TRUE)
departement_count
top5 <- head(departement_count, 5)
top5
others <- sum(departement_count) - sum(top5)
others
lab <- c(names(top5), 'others')
lab
values <- c(as.numeric(top5), others)
values
percentage <- round(values/sum(values)*100, 2)
percentage
percentageLab <- paste(lab, "(, percentage, %)", sep = '')
percentageLab <- paste(lab, "(" , percentage, "%)", sep = '')
percentageLab
pie(values,
labels = percentageLab,
col = rainbow(6))
pie(main = 'Top 5 Department (Based on Product)',
values,
labels = percentageLab,
col = rainbow(6))
frozen <- products[products$aisle == 'frozen']
frozen
frozen <- subset(products, department == 'frozen')
frozen
aisleCount <- table(frozen$aisle)
aisleCount
aisleCount <- sort(aisleCount, decreasing = FALSE)
aisleCount
lowest <- head(aisleCount, 3)
lowest
barplot(lowest,
main = 'Lowest 3 Aisle in Frozen Departement(Based on Product Count)',
col = rainbow(3))
